//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Inputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Inputs : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Inputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Inputs"",
    ""maps"": [
        {
            ""name"": ""Mouse n Keyboard"",
            ""id"": ""a2ab82d9-9cb1-4523-8c18-f2c9f48c4591"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""90fdf46c-7289-4ba7-8efe-b944dcb89609"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Aim"",
                    ""type"": ""Button"",
                    ""id"": ""7e91b154-9cfd-4ddf-ac09-4a7e8be1aad0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""59eba668-3585-40ab-b355-63652dc99405"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""422bad31-185d-4807-aab2-d7316bc09562"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""2fb3506f-82d9-4960-87bf-05a87b279b3b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""f7cb20bd-0aa2-43c6-b25f-43f1e9dd93aa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""7224b25e-a5e8-425d-9454-e4dae5e525b7"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""930ad188-e69d-4bbb-9821-81e9304d7a48"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""4a432775-539c-4871-bd0b-6da8178e0c7f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""7c94113f-b07c-415c-86c2-581d70612d3d"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""225e1749-2bf7-4eb3-aa98-5335095ed6b7"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""b72d1351-9b42-43d7-b28c-adbc413feb54"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b379c2a7-7949-4a01-a5ea-dd8fcd877629"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""ff4f1f2a-11d4-4025-a1bd-0a9e09eafd3c"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0ee9876b-0e80-4246-8374-746813de7e4e"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4f139cce-56f6-45d1-a0ea-c5949691cd04"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f66ec265-040e-4473-9a5b-f19403f3be94"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2fd3264a-7c3c-4d61-a6f6-7595b27f72f0"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""66423daf-2fba-4056-a251-948c83cb4ccb"",
                    ""path"": ""<Pointer>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b95bc95e-1882-4d39-a09a-cb88fb525200"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Mouse n Keyboard
        m_MousenKeyboard = asset.FindActionMap("Mouse n Keyboard", throwIfNotFound: true);
        m_MousenKeyboard_Movement = m_MousenKeyboard.FindAction("Movement", throwIfNotFound: true);
        m_MousenKeyboard_Aim = m_MousenKeyboard.FindAction("Aim", throwIfNotFound: true);
        m_MousenKeyboard_Shoot = m_MousenKeyboard.FindAction("Shoot", throwIfNotFound: true);
        m_MousenKeyboard_Interact = m_MousenKeyboard.FindAction("Interact", throwIfNotFound: true);
        m_MousenKeyboard_Sprint = m_MousenKeyboard.FindAction("Sprint", throwIfNotFound: true);
        m_MousenKeyboard_Jump = m_MousenKeyboard.FindAction("Jump", throwIfNotFound: true);
        m_MousenKeyboard_Look = m_MousenKeyboard.FindAction("Look", throwIfNotFound: true);
        m_MousenKeyboard_Pause = m_MousenKeyboard.FindAction("Pause", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Mouse n Keyboard
    private readonly InputActionMap m_MousenKeyboard;
    private IMousenKeyboardActions m_MousenKeyboardActionsCallbackInterface;
    private readonly InputAction m_MousenKeyboard_Movement;
    private readonly InputAction m_MousenKeyboard_Aim;
    private readonly InputAction m_MousenKeyboard_Shoot;
    private readonly InputAction m_MousenKeyboard_Interact;
    private readonly InputAction m_MousenKeyboard_Sprint;
    private readonly InputAction m_MousenKeyboard_Jump;
    private readonly InputAction m_MousenKeyboard_Look;
    private readonly InputAction m_MousenKeyboard_Pause;
    public struct MousenKeyboardActions
    {
        private @Inputs m_Wrapper;
        public MousenKeyboardActions(@Inputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_MousenKeyboard_Movement;
        public InputAction @Aim => m_Wrapper.m_MousenKeyboard_Aim;
        public InputAction @Shoot => m_Wrapper.m_MousenKeyboard_Shoot;
        public InputAction @Interact => m_Wrapper.m_MousenKeyboard_Interact;
        public InputAction @Sprint => m_Wrapper.m_MousenKeyboard_Sprint;
        public InputAction @Jump => m_Wrapper.m_MousenKeyboard_Jump;
        public InputAction @Look => m_Wrapper.m_MousenKeyboard_Look;
        public InputAction @Pause => m_Wrapper.m_MousenKeyboard_Pause;
        public InputActionMap Get() { return m_Wrapper.m_MousenKeyboard; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MousenKeyboardActions set) { return set.Get(); }
        public void SetCallbacks(IMousenKeyboardActions instance)
        {
            if (m_Wrapper.m_MousenKeyboardActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_MousenKeyboardActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_MousenKeyboardActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_MousenKeyboardActionsCallbackInterface.OnMovement;
                @Aim.started -= m_Wrapper.m_MousenKeyboardActionsCallbackInterface.OnAim;
                @Aim.performed -= m_Wrapper.m_MousenKeyboardActionsCallbackInterface.OnAim;
                @Aim.canceled -= m_Wrapper.m_MousenKeyboardActionsCallbackInterface.OnAim;
                @Shoot.started -= m_Wrapper.m_MousenKeyboardActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_MousenKeyboardActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_MousenKeyboardActionsCallbackInterface.OnShoot;
                @Interact.started -= m_Wrapper.m_MousenKeyboardActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_MousenKeyboardActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_MousenKeyboardActionsCallbackInterface.OnInteract;
                @Sprint.started -= m_Wrapper.m_MousenKeyboardActionsCallbackInterface.OnSprint;
                @Sprint.performed -= m_Wrapper.m_MousenKeyboardActionsCallbackInterface.OnSprint;
                @Sprint.canceled -= m_Wrapper.m_MousenKeyboardActionsCallbackInterface.OnSprint;
                @Jump.started -= m_Wrapper.m_MousenKeyboardActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_MousenKeyboardActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_MousenKeyboardActionsCallbackInterface.OnJump;
                @Look.started -= m_Wrapper.m_MousenKeyboardActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_MousenKeyboardActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_MousenKeyboardActionsCallbackInterface.OnLook;
                @Pause.started -= m_Wrapper.m_MousenKeyboardActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_MousenKeyboardActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_MousenKeyboardActionsCallbackInterface.OnPause;
            }
            m_Wrapper.m_MousenKeyboardActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Aim.started += instance.OnAim;
                @Aim.performed += instance.OnAim;
                @Aim.canceled += instance.OnAim;
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Sprint.started += instance.OnSprint;
                @Sprint.performed += instance.OnSprint;
                @Sprint.canceled += instance.OnSprint;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
            }
        }
    }
    public MousenKeyboardActions @MousenKeyboard => new MousenKeyboardActions(this);
    public interface IMousenKeyboardActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnAim(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
    }
}
